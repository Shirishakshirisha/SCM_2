spring.application.name=scm2.0

# data base configurations
# datasource ka url
spring.datasource.url=jdbc:mysql://localhost:3306/scm200
spring.datasource.username=root
spring.datasource.password=root



# jpa configurations
spring.jpa.show-sql=true
# creating schema
# table are created automatically
spring.jpa.hibernate.ddl-auto=update
# dielect 
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.format_sql=create



























# In JPA with Hibernate, a dialect is a class that tells Hibernate how to generate SQL for a particular database.

# Each database (MySQL, PostgreSQL, Oracle, SQL Server, etc.) has slightly different SQL syntax. For example:

# String concatenation is done differently in MySQL (CONCAT) vs. Oracle (||).

# Auto-increment fields exist in MySQL, but Oracle uses sequences.

# ðŸ‘‰ The Dialect bridges this gap by translating Hibernateâ€™s abstract HQL/Criteria queries into database-specific SQL.